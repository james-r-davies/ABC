<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Infinite Scroll Data Table</title>
    <style>
        /* Basic styling */
        body {
            font-family: Arial, sans-serif;
        }
        #data-table {
            width: 100%;
            border-collapse: collapse;
        }
        #data-table th, #data-table td {
            padding: 8px;
            border: 1px solid #ccc;
        }
        #data-table th {
            background-color: #f4f4f4;
        }
        #loading {
            text-align: center;
            padding: 10px;
            display: none;
        }
    </style>
</head>
<body>

<h1>Infinite Scroll Data Table</h1>

<table id="data-table">
    <thead>
        <tr>
            <th>Column 1</th>
            <th>Column 2</th>
            <th>Column 3</th>
            <!-- Add more columns as needed -->
        </tr>
    </thead>
    <tbody id="table-body">
        <!-- Rows will be appended here -->
    </tbody>
</table>

<div id="loading">Loading more data...</div>

<script>
    let currentPage = 1;
    const perPage = 50;  // Adjust as needed
    let isLoading = false;
    let hasMoreData = true;

    // Function to fetch data from the server
    async function fetchData(page) {
        if (isLoading || !hasMoreData) return;

        isLoading = true;
        document.getElementById('loading').style.display = 'block';

        try {
            const response = await fetch(`/data?page=${page}&per_page=${perPage}`);
            if (!response.ok) throw new Error('Network response was not ok');
            const result = await response.json();

            renderRows(result.data);

            hasMoreData = result.has_more;
            currentPage++;

        } catch (error) {
            console.error('Error fetching data:', error);
        } finally {
            isLoading = false;
            document.getElementById('loading').style.display = 'none';
        }
    }

    // Function to render rows in the table
    function renderRows(data) {
        const tableBody = document.getElementById('table-body');
        data.forEach(row => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td>${row.column1}</td>
                <td>${row.column2}</td>
                <td>${row.column3}</td>
                <!-- Add more cells as needed -->
            `;
            tableBody.appendChild(tr);
        });
    }

    // Function to handle scroll event
    function handleScroll() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const windowHeight = window.innerHeight || document.documentElement.clientHeight;
        const documentHeight = document.documentElement.scrollHeight;

        if (scrollTop + windowHeight >= documentHeight - 100) {
            fetchData(currentPage);
        }
    }

    // Initial data load
    fetchData(currentPage);

    // Attach scroll event listener
    window.addEventListener('scroll', handleScroll);
</script>

</body>
</html>
